# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Any  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ConsumptionGraphResponseData(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, client_id: int=None, consumption: List[Any]=None, recharge: List[Any]=None):  # noqa: E501
        """ConsumptionGraphResponseData - a model defined in Swagger

        :param client_id: The client_id of this ConsumptionGraphResponseData.  # noqa: E501
        :type client_id: int
        :param consumption: The consumption of this ConsumptionGraphResponseData.  # noqa: E501
        :type consumption: List[Any]
        :param recharge: The recharge of this ConsumptionGraphResponseData.  # noqa: E501
        :type recharge: List[Any]
        """
        self.swagger_types = {
            'client_id': int,
            'consumption': List[Any],
            'recharge': List[Any]
        }

        self.attribute_map = {
            'client_id': 'client_id',
            'consumption': 'consumption',
            'recharge': 'recharge'
        }
        self._client_id = client_id
        self._consumption = consumption
        self._recharge = recharge

    @classmethod
    def from_dict(cls, dikt) -> 'ConsumptionGraphResponseData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ConsumptionGraphResponseData of this ConsumptionGraphResponseData.  # noqa: E501
        :rtype: ConsumptionGraphResponseData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_id(self) -> int:
        """Gets the client_id of this ConsumptionGraphResponseData.


        :return: The client_id of this ConsumptionGraphResponseData.
        :rtype: int
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id: int):
        """Sets the client_id of this ConsumptionGraphResponseData.


        :param client_id: The client_id of this ConsumptionGraphResponseData.
        :type client_id: int
        """

        self._client_id = client_id

    @property
    def consumption(self) -> List[Any]:
        """Gets the consumption of this ConsumptionGraphResponseData.


        :return: The consumption of this ConsumptionGraphResponseData.
        :rtype: List[Any]
        """
        return self._consumption

    @consumption.setter
    def consumption(self, consumption: List[Any]):
        """Sets the consumption of this ConsumptionGraphResponseData.


        :param consumption: The consumption of this ConsumptionGraphResponseData.
        :type consumption: List[Any]
        """

        self._consumption = consumption

    @property
    def recharge(self) -> List[Any]:
        """Gets the recharge of this ConsumptionGraphResponseData.


        :return: The recharge of this ConsumptionGraphResponseData.
        :rtype: List[Any]
        """
        return self._recharge

    @recharge.setter
    def recharge(self, recharge: List[Any]):
        """Sets the recharge of this ConsumptionGraphResponseData.


        :param recharge: The recharge of this ConsumptionGraphResponseData.
        :type recharge: List[Any]
        """

        self._recharge = recharge
