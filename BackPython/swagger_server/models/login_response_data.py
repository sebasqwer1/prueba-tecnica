# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class LoginResponseData(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, client_id: int=None, user_name: str=None, name: str=None):  # noqa: E501
        """LoginResponseData - a model defined in Swagger

        :param client_id: The client_id of this LoginResponseData.  # noqa: E501
        :type client_id: int
        :param user_name: The user_name of this LoginResponseData.  # noqa: E501
        :type user_name: str
        :param name: The name of this LoginResponseData.  # noqa: E501
        :type name: str
        """
        self.swagger_types = {
            'client_id': int,
            'user_name': str,
            'name': str
        }

        self.attribute_map = {
            'client_id': 'client_id',
            'user_name': 'user_name',
            'name': 'name'
        }
        self._client_id = client_id
        self._user_name = user_name
        self._name = name

    @classmethod
    def from_dict(cls, dikt) -> 'LoginResponseData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The LoginResponseData of this LoginResponseData.  # noqa: E501
        :rtype: LoginResponseData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_id(self) -> int:
        """Gets the client_id of this LoginResponseData.


        :return: The client_id of this LoginResponseData.
        :rtype: int
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id: int):
        """Sets the client_id of this LoginResponseData.


        :param client_id: The client_id of this LoginResponseData.
        :type client_id: int
        """

        self._client_id = client_id

    @property
    def user_name(self) -> str:
        """Gets the user_name of this LoginResponseData.


        :return: The user_name of this LoginResponseData.
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name: str):
        """Sets the user_name of this LoginResponseData.


        :param user_name: The user_name of this LoginResponseData.
        :type user_name: str
        """

        self._user_name = user_name

    @property
    def name(self) -> str:
        """Gets the name of this LoginResponseData.


        :return: The name of this LoginResponseData.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this LoginResponseData.


        :param name: The name of this LoginResponseData.
        :type name: str
        """

        self._name = name
