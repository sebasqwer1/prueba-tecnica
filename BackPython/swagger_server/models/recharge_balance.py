# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class RechargeBalance(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, client_id: int=None, package: int=None):  # noqa: E501
        """RechargeBalance - a model defined in Swagger

        :param client_id: The client_id of this RechargeBalance.  # noqa: E501
        :type client_id: int
        :param package: The package of this RechargeBalance.  # noqa: E501
        :type package: int
        """
        self.swagger_types = {
            'client_id': int,
            'package': int
        }

        self.attribute_map = {
            'client_id': 'client_id',
            'package': 'package'
        }
        self._client_id = client_id
        self._package = package

    @classmethod
    def from_dict(cls, dikt) -> 'RechargeBalance':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RechargeBalance of this RechargeBalance.  # noqa: E501
        :rtype: RechargeBalance
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_id(self) -> int:
        """Gets the client_id of this RechargeBalance.


        :return: The client_id of this RechargeBalance.
        :rtype: int
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id: int):
        """Sets the client_id of this RechargeBalance.


        :param client_id: The client_id of this RechargeBalance.
        :type client_id: int
        """
        if client_id is None:
            raise ValueError("Invalid value for `client_id`, must not be `None`")  # noqa: E501

        self._client_id = client_id

    @property
    def package(self) -> int:
        """Gets the package of this RechargeBalance.


        :return: The package of this RechargeBalance.
        :rtype: int
        """
        return self._package

    @package.setter
    def package(self, package: int):
        """Sets the package of this RechargeBalance.


        :param package: The package of this RechargeBalance.
        :type package: int
        """
        if package is None:
            raise ValueError("Invalid value for `package`, must not be `None`")  # noqa: E501

        self._package = package
